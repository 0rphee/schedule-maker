name: Create pre-release

on:
  push:
    branches:
      - master
      - gh-actions
    paths:
      - '.github/workflows/pre-release.yml'
    # tags:
      # - 'v[0-9]+.[0-9]+.[0-9]+'

jobs:

  build-binaries:
    name: Build and test binaries (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            stack-build-args: build -j2 --local-bin-path=$(pwd) --copy-bins --ghc-options=-O2
          - os: macos-latest
            stack-build-args: build -j2 --local-bin-path=$(pwd) --copy-bins --ghc-options=-O2
          - os: windows-latest
            stack-build-args: build -j2 --flag hexpat:bundle --local-bin-path=$(pwd) --copy-bins --ghc-options=-O2 
    steps:

      # SETUP
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: haskell/actions/setup@v2
        with:
          ghc-version: '9.4.5'
          enable-stack: true
          stack-no-global: true

      # CACHING
      - name: Cache dependencies (Unix)
        uses: actions/cache@v3
        if: matrix.os != 'windows-latest'
        with:
          path: ~/.stack
          key: ${{ runner.os }}-store-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('schedule-maker.cabal') }}

      - name: Cache dependencies (Windows)
        uses: actions/cache@v3
        if: matrix.os == 'windows-latest'
        with:
          path: C:\sr # 'C:\Users\runneradmin\AppData\Roaming\stack'
          key: ${{ runner.os }}-store-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('schedule-maker.cabal') }}

      - name: Cache GHC (Windows)
        uses: actions/cache@v3
        if: matrix.os == 'windows-latest'
        with:
          path: 'C:\Users\runneradmin\AppData\Local\Programs\stack'
          key: ghc-${{ hashFiles('stack.yaml.lock') }}

      # BUILD
      - name: Build (${{ runner.os }})
        run: stack ${{ matrix.stack-build-args }}

      # UPLOAD BINARIES
      - name: Upload artifact (Unix)
        uses: actions/upload-artifact@v3
        if: matrix.os != 'windows-latest'
        with:
          name: schedule-maker-${{ runner.os }}
          path: schedule-maker
          if-no-files-found: error

      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v3
        if: matrix.os == 'windows-latest'
        with:
          name: schedule-maker-${{ runner.os }}
          path: schedule-maker.exe
          if-no-files-found: error
 
  pre-release:
    name: "Pre Release"
    needs: build-binaries
    permissions:
      contents: write
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/download-artifact@v3

      - name: Check artifacts
        run: ls -R

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: true
          fails_on_unmatched_files: true
          generate_release_notes: true
          files: |
            schedule-maker-macOS/*
            schedule-maker-Windows/*
            schedule-maker-Linux/*

      # - uses: "marvinpinto/action-automatic-releases@latest"
      #   with:
      #     repo_token: "${{ secrets.GITHUB_TOKEN }}"
      #     automatic_release_tag: "latest"
      #     prerelease: true
      #     title: "Development Build"
      #     files: |
      #       LICENSE.txt
      #       *.jar

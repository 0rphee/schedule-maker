name: Build, test and update README
on:
  pull_request:
    paths:
      - '**.hs'
      - 'stack.yaml'
      - 'package.yaml'
      - '**.cabal'
  push:
    branches:
      - 'gh-actions'
    paths:
      - '**.hs'
      - 'stack.yaml'
      - 'package.yaml'
      - '**.cabal'
      - '.github/workflows/build.yml'

jobs:

  hlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: haskell/actions/hlint-setup@v1
      - uses: haskell/actions/hlint-run@v2 

  fourmolu:
    runs-on: ubuntu-latest
    needs: hlint
    steps:
      - uses: actions/checkout@v3
      - uses: haskell-actions/run-fourmolu@v9
        with:
          # Only check the format of .hs in any directory inside cwd but not cwd.
          pattern: |
            */**/*.hs

  # test-unix:
  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest, macos-latest]
  #   runs-on: ${{ matrix.os }}
  #   needs: fourmolu
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: freckle/stack-action@v4
  #       with: 
  #         fast: true
  #         stack-arguments: -j2
  #         pedantic: false

  # test-win:
  #   runs-on: windows-latest
  #   needs: fourmolu
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: freckle/stack-action@v4
  #       with: 
  #         fast: true
  #         stack-arguments: -j2 --flag hexpat:bundle
  #         pedantic: false

  build-binaries:
    name: Build and test binaries (${{ matrix.os }})
    needs: fourmolu
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            stack-build-args: build -j2 --ghc-options=-O2
          - os: macos-latest
            stack-build-args: build -j3 --ghc-options=-O2
          - os: windows-latest
            stack-build-args: build -j2 --flag hexpat:bundle --ghc-options=-O2
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - uses: haskell/actions/setup@v2
        with:
          ghc-version: '9.4.5'
          enable-stack: true
          stack-no-global: true

      # - name: Install stack (MacOS)
      #   run: curl -sSL https://get.haskellstack.org/ | sh
      #   if: matrix.os == 'macos-10.15'

      # - name: Install stack (Windows)
      #   run: choco install haskell-stack
      #   if: matrix.os == 'windows-2019'

      # CACHING
      - name: Cache dependencies (Unix)
        uses: actions/cache@v3
        if: matrix.os != 'windows-latest'
        with:
          path: ~/.stack
          key: ${{ runner.os }}-store-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('schedule-maker.cabal') }}

      - name: Cache dependencies (Windows)
        uses: actions/cache@v3
        if: matrix.os == 'windows-latest'
        with:
          path: C:\sr # 'C:\Users\runneradmin\AppData\Roaming\stack'
          key: ${{ runner.os }}-store-${{ hashFiles('stack.yaml.lock') }}-${{ hashFiles('schedule-maker.cabal') }}

      - name: Cache GHC (Windows)
        uses: actions/cache@v3
        if: matrix.os == 'windows-latest'
        with:
          path: 'C:\Users\runneradmin\AppData\Local\Programs\stack'
          key: ghc-${{ hashFiles('stack.yaml.lock') }}

      # BUILD
      - name: Build (${{ runner.os }})
        run: stack ${{ matrix.stack-build-args }}

      # RUN TESTS
      - name: Run tests (${{ runner.os }})
        run: stack test

# WHEN MODIFYING always keep the regex and annotations <!-- REPLACE_EXE_HELP -->\n```[a-z]*\n[\s\S]*?\n```\n' 
  update-readme:
    name: Update README.md with '--help' exe output
    runs-on: ubuntu-latest
    needs: build-binaries
    steps:
      - uses: actions/checkout@v3
      - name: Build exe
        uses: freckle/stack-action@v4
        with:
          fast: true
          pedantic: false
          test: false
          stack-arguments: -j2 --exec "stack run -- --help" > out.txt

      - name: Set $CONTENT for text replacement
        run: | 
          {
            echo 'CONTENT<<EOF'
            cat out.txt
            echo EOF
          } >> $GITHUB_ENV

      - name: Update README.md (Find and Replace)
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: '<!-- REPLACE_EXE_HELP -->\n```[a-z]*\n[\s\S]*?\n```\n'
          include: README.md
          regex: true
          replace: |
              <!-- REPLACE_EXE_HELP -->
              ```
              ${{ env.CONTENT }}
              ```
      - name: Add, commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "[Bot] update README content"
          add: README.md
          committer_name: GitHub Actions
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com

